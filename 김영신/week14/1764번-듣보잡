#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int n, m;
    string nString, mString;
    vector<string> nVec;
    vector<string> mVec;
    vector<string> resultVec;

    cin >> n >> m;

    for (int i = 0; i < n; i++) {
        cin >> nString;
        nVec.push_back(nString);
    }
    for (int i = 0; i < m;i++) {
        cin >> mString;
        mVec.push_back(mString);
    }
    sort(nVec.begin(), nVec.end());
    sort(mVec.begin(), mVec.end());

    bool breakIndex = false;
    int k = 0;
    for (int i = 0; i< n; i++) {
        if (breakIndex) break;
        for (int j = k; j < m; j++) {
            if (nVec[i] == mVec[j]) {
                resultVec.push_back(nVec[i]);
                k = j + 1;
                if (k >= m) breakIndex = true;
                break;
            }
           if (nVec[i] < mVec[j]) {
               k = j;

               break;
           }
        }
    }

    cout << resultVec.size();
    for (auto i : resultVec) {
        cout << "\n" << i;
    }
}
